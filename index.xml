<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Yaroslav Bibaev</title>
    <link>https://bibaev.dev/</link>
    <description>Recent content on Yaroslav Bibaev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru-RU</language>
    <copyright>©Yaroslav Bibaev</copyright>
    <lastBuildDate>Thu, 17 Sep 2020 08:24:36 +0300</lastBuildDate>
    
	<atom:link href="https://bibaev.dev/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Пару слов в защиту сбора аналитики</title>
      <link>https://bibaev.dev/posts/couple-words-about-analytics/</link>
      <pubDate>Sun, 11 Apr 2021 18:37:01 +0300</pubDate>
      
      <guid>https://bibaev.dev/posts/couple-words-about-analytics/</guid>
      <description>Приватность — это важно. Особенно сейчас, когда каждый сервис собирает кучу всего о пользователях: необходимые данные и даже те, которые не нужны. Просто на всякий случай. В итоге они могут быть доступны каждому, включая чувствительные данные, которым точно не место в публичном доступе. Напуганные этим мы теперь стремимся минимизировать возможный ущерб и делимся только минимальным необходимым набором данных или вообще, если это возможно, не делимся. Блокируем трекеры и отключаем, там где это возможно, сбор любых аналитических данных.</description>
    </item>
    
    <item>
      <title>Линейный код</title>
      <link>https://bibaev.dev/posts/linear-code/</link>
      <pubDate>Sun, 04 Apr 2021 16:41:01 +0300</pubDate>
      
      <guid>https://bibaev.dev/posts/linear-code/</guid>
      <description>Если попытаться представить написанный код в виде структуры, то это будет определение параметров, вызов функций с частью этих параметров и дальнейшая обработка полученного результата. В это же время в функциях могут находиться вызовы других функций, а те вызывать еще дополнительные функции, тем самым заставляя читающего углубляться глубже и глубже в код, никак не способствуя пониманию сути программы.
Код уходящий в глубину, с точки зрения производительности, не играет важной роли, а вот с точки зрения читающего - в разы усложняет понимание и делает это весьма затратной задачей.</description>
    </item>
    
    <item>
      <title>Приложения для двухфакторной аутентификации</title>
      <link>https://bibaev.dev/posts/two-factor-authentication/</link>
      <pubDate>Sun, 21 Mar 2021 10:16:01 +0300</pubDate>
      
      <guid>https://bibaev.dev/posts/two-factor-authentication/</guid>
      <description>Сейчас большинство сервисов дают возможность включить двухфакторную аутентификацию, что повышает защищенность вашего аккаунта в несколько раз. Один из самых распространенных видов такой аутентификации - это когда сервис отправляет на мобильный телефон sms c одноразовым кодом доступа. Очень удобно, тем более, что подойдет любой мобильный телефон, который может принять и отобразить sms.
Простота накладывает свой негативный отпечаток - любой, кто может перехватывать sms имеет возможность получить доступ к вашему аккаунту. Например, такое уже было с пользователями telegram.</description>
    </item>
    
    <item>
      <title>Понятный код</title>
      <link>https://bibaev.dev/posts/clear-code/</link>
      <pubDate>Sun, 14 Feb 2021 17:32:01 +0300</pubDate>
      
      <guid>https://bibaev.dev/posts/clear-code/</guid>
      <description>На заре возникновения компьютеров вряд ли задумывались о понятном коде, ведь тогда даже не было языков программирования, а инструкции вводились в компьютер сразу в машинном коде — из нулей и единиц. Так себе развлечение, если честно. Осознав неудобства такого ввода, люди смекнули, что инструкции процессора можно заменить на мнемонику, которую будет легко запомнить. Так появился первый низкоуровневый язык программирования — язык ассемблера, где вместо нулей и единиц стало возможным вводить запоминающиеся человеку команды.</description>
    </item>
    
    <item>
      <title>Подкасты в 2021</title>
      <link>https://bibaev.dev/posts/podcasts-2021/</link>
      <pubDate>Sun, 31 Jan 2021 15:32:01 +0300</pubDate>
      
      <guid>https://bibaev.dev/posts/podcasts-2021/</guid>
      <description>Я уже делал небольшой пост со списком предпочтительных подкастов. Это было почти год назад и вот, как это было:
 Сколько-то лет тому назад я подсел на подкасты и так и остался с ними до сих пор. Для меня это еще один способ узнать что-то новое. Иногда, это даже интереснее, чем музыка или аудиокниги. Возможно именно по этому я и публикую здесь этот список из трех подкастов:
 UWP - Eженедельный подкаст от Umputun (жизнь в Америке) Давай Поговорим (саморазвитие) Легко, просто и подкаст (мироощущение)   Кажется, настало время его обновить.</description>
    </item>
    
    <item>
      <title>Психбольница в руках пациентов или коротко про важность интерфейсов</title>
      <link>https://bibaev.dev/posts/about-interfaces/</link>
      <pubDate>Sun, 24 Jan 2021 09:32:01 +0300</pubDate>
      
      <guid>https://bibaev.dev/posts/about-interfaces/</guid>
      <description>Уже не помню, как давно эта книга попала в мой список на прочтение, но по ощущениям это было достаточно давно. Помню только то, что ее обычно советуют прочитать, если ты как-то связан с интерфейсами.
И вот, наконец-то пришло время и можно сказать, что я добрался до этой книги и даже прочитал ее взахлеб настолько, насколько это было возможно, если читать всего пару раз в неделю или того реже. До этого момента я мало задумывался о важности интерфейсов и пользовательском опыте.</description>
    </item>
    
    <item>
      <title>Любовь к чехлам</title>
      <link>https://bibaev.dev/posts/love-of-covers/</link>
      <pubDate>Sat, 16 Jan 2021 16:32:01 +0300</pubDate>
      
      <guid>https://bibaev.dev/posts/love-of-covers/</guid>
      <description>Чехлы достаточно давно пришли в наш обиход. Не удивлюсь, что даже первые люди вовсю их использовали, но сейчас меня это мало интересует и все забавные факты оставим знатоками истории.
Мое знакомство с чехлами началось с детства, именно тогда я узнал про скатерти. В то время они были достаточно модными и накрывали каждый стол в нашем доме. Забавно, но я не помню как выглядел стол без скатерти, только она осталась в моей памяти.</description>
    </item>
    
    <item>
      <title>Тестовое задание</title>
      <link>https://bibaev.dev/posts/test-task/</link>
      <pubDate>Sun, 06 Dec 2020 17:47:01 +0300</pubDate>
      
      <guid>https://bibaev.dev/posts/test-task/</guid>
      <description>Тестовые задания стали неотъемлемой частью собеседований на должность разработчика. Даже если у тебя есть гитхаб с примерами кода, то не смотря на это, тебе предложат сделать тестовое задание. После того, как ты согласился, то скорее всего ты стал именно тем счастливчиком, которому придётся потратить на это около 4 часов свободного времени, а возможно и больше. Тебе придётся написать кусок шаблонного кода, который на самом деле никому не нужен и он ничего толком не показывает, а в большинстве случаев тебе за это никто не заплатит.</description>
    </item>
    
    <item>
      <title>eSIM</title>
      <link>https://bibaev.dev/posts/esim/</link>
      <pubDate>Tue, 24 Nov 2020 08:27:12 +0300</pubDate>
      
      <guid>https://bibaev.dev/posts/esim/</guid>
      <description>Я из тех, кто всячески старается избегать втыканий посторонних предметов в свой телефон, а еще меня очень раздражают провода - ведь их тоже нужно куда-то втыкать. Я не переживал, когда началась тенденция к избавлению от разъёмов jack3.5 для подключения наушников к телефону, ведь я уже познал всю связанную с этим боль. Невозможно представить что-то раздражительнее, чем задеть неловким движением руки этот злосчастный проводок и тем самым выдернуть наушники из ушей. А помните, как их постоянно приходилось распутывать после того, как они полежали в кармане?</description>
    </item>
    
    <item>
      <title>Чтение документации</title>
      <link>https://bibaev.dev/posts/reading-docs/</link>
      <pubDate>Mon, 02 Nov 2020 17:00:49 +0300</pubDate>
      
      <guid>https://bibaev.dev/posts/reading-docs/</guid>
      <description>Недавно осознал (да, именно пришло понимание), что функция print() — это всего лишь синтаксический сахар над sys.stdout.write. Посмотрел в документацию, а там так и написано. 🤔
“И каков посыл?” — спросите вы. А тут все просто: чтение документации дает ответы на многие вопросы и делает жизнь значительно проще, а главное, волосы становятся мягкими и шелковистыми. Вот таков посыл. 😉</description>
    </item>
    
    <item>
      <title>Проверяем, что строка состоит из цифр на python</title>
      <link>https://bibaev.dev/posts/check-string-contains-numbers-in-python/</link>
      <pubDate>Sun, 25 Oct 2020 18:02:54 +0300</pubDate>
      
      <guid>https://bibaev.dev/posts/check-string-contains-numbers-in-python/</guid>
      <description>Ни так давно мне потребовалось проверить в одном месте, что строка состоит из цифр, к которым мы все так давно привыкли. На всякий случай напомню, как выглядят для меня всем привычные цифры. Вот так: 0123456789.
В памяти возникли какие-то воспоминания про str.isdigit(). «Ха, плевое дело!» – подумал я. Этим и воспользовался. Написал. Тесты проходят. Кажется, что все работает так, как нужно. Но как оказалось, что не все так просто&amp;hellip;
В python, как в высокоуровневом языке, есть аж целых три метода для того, чтобы понять, что строка состоит из цифр: str.</description>
    </item>
    
    <item>
      <title>Обо мне</title>
      <link>https://bibaev.dev/about/</link>
      <pubDate>Thu, 17 Sep 2020 08:24:36 +0300</pubDate>
      
      <guid>https://bibaev.dev/about/</guid>
      <description>Привет! Меня зовут Ярослав и я - разработчик. Возможно, это и прозвучало как &amp;ldquo;Привет! Меня зовут Ярослав и я алкоголик&amp;rdquo;, но на самом деле это не так. Честно. Хотя я действительно искренне люблю программировать.
Чтобы долго не ходить вокруг да около, хочется сразу начать с определения цели блога. Ведь, на самом деле, она проста как ситцевые трусы и незатейлива как грабли - научиться понятно объяснять и доносить свои мысли. По совместительству было бы неплохо еще и научиться писать, но это скорее как побочный эффект.</description>
    </item>
    
    <item>
      <title>Автоматизация и iOS</title>
      <link>https://bibaev.dev/posts/automation-and-ios/</link>
      <pubDate>Sun, 06 Sep 2020 17:38:43 +0300</pubDate>
      
      <guid>https://bibaev.dev/posts/automation-and-ios/</guid>
      <description>Несколько месяцев назад, ради эксперимента решил попробовать пожить на iOS и как-то меня это затянуло и пока я всё там же. Оказалось там есть много прикольных штук, одну из которых я долго игнорировал и как оказалось зря.
Речь пойдет про Shortcuts - мощное приложение, которое позволяет автоматизировать рутинные задачи на iOS устройстве. В приложении есть довольно богатый выбор разных действий, из которых можно собирать целые пайплайны (это такие цепочки действий). Так же можно скачивать уже готовые пайплайны, которые для вас заботливо собрали другие люди.</description>
    </item>
    
    <item>
      <title>Минимальный набор браузерных расширений для комфортного интернет-сёрфинга</title>
      <link>https://bibaev.dev/posts/browser-addons/</link>
      <pubDate>Tue, 30 Jun 2020 21:04:39 +0300</pubDate>
      
      <guid>https://bibaev.dev/posts/browser-addons/</guid>
      <description>Интернет-сёрфинг стал времяпровождением, без которого уже сложно представить современную жизнь в 2020 году, а браузер стал самой запускаемой программой и точкой входа в удивительный мир информации, тем самым заменив собой библиотеки, архивы и прочие существующие по сей день анахронизмы современности. Поэтому очень важно, чтобы интернет-сёрфинг был максимально удобным и безопасным.
В качестве браузера я использую Firefox. Этот выбор я сделал достаточно давно и как мне кажется, я не прогадал. Несомненно меня радует то, что сейчас в Firefox добавляют много фичей связанных с безопасностью интернет-сёрфинга.</description>
    </item>
    
    <item>
      <title>Отбивка в 79 символов и PEP8</title>
      <link>https://bibaev.dev/posts/max-line-length-79-pep8/</link>
      <pubDate>Wed, 17 Jun 2020 21:55:30 +0300</pubDate>
      
      <guid>https://bibaev.dev/posts/max-line-length-79-pep8/</guid>
      <description>Ни так давно у меня уже выходила заметка про форматирование кода, но в это раз хочется поговорить о максимальной длине строки кода, которая является одним из важных параметров в оформлении кода и не редко порождает споры вокруг себя. Для python есть рекомендация по оформлению и называется она PEP8 (Style Guide for Python Code), в которой есть пункт про максимальную длину кода (Maximum Line Length) и по этой рекомендации она должна быть не больше 79 символов.</description>
    </item>
    
    <item>
      <title>Async/await теперь и в django</title>
      <link>https://bibaev.dev/posts/async-django/</link>
      <pubDate>Sat, 06 Jun 2020 20:19:16 +0300</pubDate>
      
      <guid>https://bibaev.dev/posts/async-django/</guid>
      <description>Только ленивый не написал о том, что Django начиная с версии 3.1 станет поддерживать асинхронные мидлвари и вью. Это действительно большое изменение для такого крупного и достаточно старого (~15 лет) фреймворка, как Django.
В начале этого пути появится много кода, который будет нужен только для поддержки одновременной работы в фреймворка в асинхронном и синхронном мире. Несомненно, это усложнит поддержку и добавит больше точек отказа, но таков путь итеративной разработки. Тем более такая история уже была и тогда делали поддержку третьей версии python.</description>
    </item>
    
    <item>
      <title>Инструменты для форматирования кода</title>
      <link>https://bibaev.dev/posts/code-formatters/</link>
      <pubDate>Sun, 24 May 2020 19:57:26 +0300</pubDate>
      
      <guid>https://bibaev.dev/posts/code-formatters/</guid>
      <description>Ни для кого не секрет, что разработчики пишут много кода, но еще больше времени они тратят на его чтение. Для того, чтобы тратить на всё это меньше времени приходится придерживаться разных правил. Например, стараться писать код в одном стиле, чтобы в любой части программы он выглядел примерно одинаково и узнаваемо. Такого можно добиться ручным или автоматическим способами.
Ручной способ можно описать примерно так: у команды есть какая-то договоренность по стилю написания и даже возможно она записана в общем для команды &amp;ldquo;источнике знаний&amp;rdquo;, для того чтобы в последующих моментах можно было на это ссылаться.</description>
    </item>
    
  </channel>
</rss>