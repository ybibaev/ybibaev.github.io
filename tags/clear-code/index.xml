<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>clear code on Yaroslav Bibaev</title>
    <link>https://bibaev.dev/tags/clear-code/</link>
    <description>Recent content in clear code on Yaroslav Bibaev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru-RU</language>
    <copyright>©Yaroslav Bibaev</copyright>
    <lastBuildDate>Sun, 04 Apr 2021 16:41:01 +0300</lastBuildDate>
    
	<atom:link href="https://bibaev.dev/tags/clear-code/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Линейный код</title>
      <link>https://bibaev.dev/posts/linear-code/</link>
      <pubDate>Sun, 04 Apr 2021 16:41:01 +0300</pubDate>
      
      <guid>https://bibaev.dev/posts/linear-code/</guid>
      <description>Если попытаться представить написанный код в виде структуры, то это будет определение параметров, вызов функций с частью этих параметров и дальнейшая обработка полученного результата. В это же время в функциях могут находиться вызовы других функций, а те вызывать еще дополнительные функции, тем самым заставляя читающего углубляться глубже и глубже в код, никак не способствуя пониманию сути программы.
Код уходящий в глубину, с точки зрения производительности, не играет важной роли, а вот с точки зрения читающего - в разы усложняет понимание и делает это весьма затратной задачей.</description>
    </item>
    
    <item>
      <title>Понятный код</title>
      <link>https://bibaev.dev/posts/clear-code/</link>
      <pubDate>Sun, 14 Feb 2021 17:32:01 +0300</pubDate>
      
      <guid>https://bibaev.dev/posts/clear-code/</guid>
      <description>На заре возникновения компьютеров вряд ли задумывались о понятном коде, ведь тогда даже не было языков программирования, а инструкции вводились в компьютер сразу в машинном коде — из нулей и единиц. Так себе развлечение, если честно. Осознав неудобства такого ввода, люди смекнули, что инструкции процессора можно заменить на мнемонику, которую будет легко запомнить. Так появился первый низкоуровневый язык программирования — язык ассемблера, где вместо нулей и единиц стало возможным вводить запоминающиеся человеку команды.</description>
    </item>
    
  </channel>
</rss>